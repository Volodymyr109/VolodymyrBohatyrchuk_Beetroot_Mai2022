print(search_for, index)

#FIBONACCI SEACH
def fibonacci_search(arr,x):
    l = len(arr)
    elim = -1
    fn_2 = 0    #Two finbonacci numbers before fn
    fn_1 = 1    #One finonacci numbers before fn
    fn = fn_1+fn_2
    while fn<l:
        fn_1, fn_2 = fn, fn_1
        fn = fn_1+fn_2
    while fn>1:
        #Note: Searching after the 'elim' factor
        curr = min(elim+fn_2,l-1)  #To ensure index is within range
        if arr[curr] == x:
            return curr     #Returning the found index
        elif arr[curr] > x:   #Then element is first 1/3rd
            fn = fn_2
            fn_1 = fn_1 - fn_2
            fn_2 = fn_2 - fn_1   #Moving two down
        else:   #arr[curr] < x
            fn = fn_1
            fn_1 = fn_2
            fn_2 = fn - fn_1   #Moving 1 down
            elim = curr   #eliminating upto curr from 0 index
    return -1

#Euklid
def gcd(a, b):
    while a != 0 and b != 0:
        if a > b:
            a = a%b
        else:
            b = b%a

        return a+b
print('gcd', gcd(30,18))
